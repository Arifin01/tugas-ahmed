# -*- coding: utf-8 -*-
"""UjianKNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vxtNuYA551PgXvbTbLMpwFPnz5kG3dmM
"""

import pandas as pd

df = pd.read_excel('caesarian.xlsx')

df.head()

x = df.iloc[:,0:-1].values
y = df.iloc[:,-1].values

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

y.shape

df.info()

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()

x_train = sc.fit_transform(x_train)

x_test = sc.fit_transform(x_test)

from sklearn.neighbors import KNeighborsClassifier

import numpy as np

error_rate = []
for i in range(1,25):
    knn = KNeighborsClassifier(n_neighbors=i)
    knn.fit(x_train,y_train)
    pred_i = knn.predict(x_test)
    error_rate.append(np.mean(pred_i != y_test))

print("Minimum error:-",min(error_rate),"at K =",error_rate.index(min(error_rate)))

knn = KNeighborsClassifier(n_neighbors=25)
knn.fit(x_train,y_train)

from sklearn.metrics import confusion_matrix

y_pred = knn.predict(x_test)

cm =confusion_matrix(y_test,y_pred)

cm

from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score

akurasi = classification_report(y_test,y_pred)

akurasi

print(akurasi)

skor_akurasi = accuracy_score(y_test, y_pred)
print(skor_akurasi)